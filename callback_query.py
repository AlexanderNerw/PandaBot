import handlers.keyboards as kb, handlers.setting as st, handlers.tests as ts
from aiogram import Bot, Dispatcher, executor, types
from handlers.config import dp, bot, ADMIN, storage
from handlers.querry_db import db
from handlers.dialogs import *
import menu

@dp.callback_query_handler(text='menu_setting')
async def inline_menu(c):
    try:
        if (db.getting(c.message.chat.id, 'gender') == "Male"):
            if (db.getting(c.message.chat.id, 'language') == "ru"): 

                await bot.edit_message_text("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:", c.message.chat.id, c.message.message_id)
                await bot.edit_message_reply_markup(c.message.chat.id, c.message.message_id, reply_markup=kb.setting_button_ru_men)
            else:
                await bot.edit_message_text("‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:", c.message.chat.id, c.message.message_id)
                await bot.edit_message_reply_markup(c.message.chat.id, c.message.message_id, reply_markup=kb.setting_button_uk_men)

        elif (db.getting(c.message.chat.id, 'gender') == "Female"):
            if (db.getting(c.message.chat.id, 'language') == "ru"): 

                await bot.edit_message_text("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:", c.message.chat.id, c.message.message_id)
                await bot.edit_message_reply_markup(c.message.chat.id, c.message.message_id, reply_markup = kb.setting_button_ru_women)
            else:
                await bot.edit_message_text("‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:", c.message.chat.id, c.message.message_id)
                await bot.edit_message_reply_markup(c.message.chat.id, c.message.message_id, reply_markup = kb.setting_button_uk_women)
        else:
            db.adding(c.message.chat.id, 'gender', "Male")

    except Exception as ex:
        await bot.send_message(ADMIN[1], 'callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_menu: ', ex)
        print("callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_menu: ", ex)

@dp.callback_query_handler(text='menu_setting_back')
async def inline_menu_back(c):
    try:
        if (db.getting(c.message.chat.id, 'language') == "ru"): #            –†—É—Å—Å–∫–∏–π —è–∑—ã–∫
            await bot.edit_message_text("üî∏                <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>                üî∏\n\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–æ–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.",
            c.message.chat.id, c.message.message_id, parse_mode='html', reply_markup = kb.board_menu)
                        
        elif (db.getting(c.message.chat.id, 'language') == "uk"): #            –£–∫—Ä–∞–∏–Ω—Å–∫–∏–π —è–∑—ã–∫
            await bot.edit_message_text("üî∏                <b>–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é</b>                üî∏\n\n–¢—É—Ç —Ç–∏ –º–æ–∂–µ—à –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –º–æ—ó–º–∏ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏.",
            c.message.chat.id, c.message.message_id, parse_mode='html', reply_markup = kb.board_menu)
    except Exception as ex:
        await bot.send_message(ADMIN[1], 'callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_menu_back: ', ex)
        print("callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_menu_back: ", ex)

@dp.callback_query_handler(text='setting_gender_ru')
async def setting_gender_ru(c):

    try:
        if (db.getting(c.message.chat.id, 'gender') == "Female"):
            db.adding(c.message.chat.id, 'gender', "Male")
            await inline_menu(c)
        else:
            db.adding(c.message.chat.id, 'gender', "Female")
            await inline_menu(c)

    except Exception as ex:
        await bot.send_message(ADMIN[1], 'callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å setting_gender_ru: ', ex)
        print("callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å setting_gender_ru: ", ex)

@dp.callback_query_handler(text='setting_gender_uk')
async def setting_gender_uk(c):
    try:
        if (db.getting(c.message.chat.id, 'gender') == "Female"):
            db.adding(c.message.chat.id, 'gender', "Male")
            await inline_menu(c)
        else:
            db.adding(c.message.chat.id, 'gender', "Female")
            await inline_menu(c)

    except Exception as ex:
        await bot.send_message(ADMIN[1], 'callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å setting_gender_uk: ', ex)
        print("callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å setting_gender_uk: ", ex)

@dp.callback_query_handler(text='setting_language_ru')
async def setting_language_ru(c):
    try:
        if (db.getting(c.message.chat.id, 'language') == "ru"):
            db.adding(c.message.chat.id, 'language', "uk")
            await inline_menu(c)
        else:
            db.adding(c.message.chat.id, 'language', "ru")
            await inline_menu(c)

    except Exception as ex:
        await bot.send_message(ADMIN[1], 'callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å setting_language_ru: ', ex)
        print("callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å setting_language_ru: ", ex)

@dp.callback_query_handler(text='setting_language_uk')
async def setting_language_uk(c):
    try:
        if (db.getting(c.message.chat.id, 'language') == "uk"):
            db.adding(c.message.chat.id, 'language', "ru")
            await inline_menu(c)
        else:
            db.adding(c.message.chat.id, 'language', "uk")
            await inline_menu(c)

    except Exception as ex:
        await bot.send_message(ADMIN[1], 'callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å setting_language_uk: ', ex)
        print("callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å setting_language_uk: ", ex)

@dp.callback_query_handler(text="menu_test")
async def inline_menu_tests(call:types.CallbackQuery):
    try:
        await ts.tests(call.message)
    except Exception as ex:
        await bot.send_message(ADMIN[1], 'callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_menu_tests: ', ex)
        print("callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_menu_tests: ", ex)

@dp.callback_query_handler(text="menu_setting")
async def inline_menu_setting(call:types.CallbackQuery):
    try:
        await st.setting(call.message)
    except Exception as ex:
        await bot.send_message(ADMIN[1], 'callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_menu_setting: ', ex)
        print("callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_menu_setting: ", ex)

@dp.callback_query_handler(text="menu_calendar")
async def inline_menu_—Åalendar(call:types.CallbackQuery):
    try:
        await call.message.answer("–ù–∏—Ö–µ—Ä–∞ –ø–æ–∫–∞-—á—Ç–æ")
        import handlers.tests as ts
    except Exception as ex:
        await bot.send_message(ADMIN[1], 'callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_menu_—Åalendar: ', ex)
        print("callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_menu_—Åalendar: ", ex)

@dp.callback_query_handler(text="menu_game")
async def inline_menu_game(call:types.CallbackQuery):
    try:
        await call.message.answer("–¢—É—Ç –Ω–∏—Ö–µ—Ä–∞ –Ω–µ—Ç")
    except Exception as ex:
        await bot.send_message(ADMIN[1], 'callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_menu_game: ', ex)
        print("callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_menu_game: ", ex)

@dp.callback_query_handler(text="fb_yes")
async def inline_fb_yes(call:types.CallbackQuery):

    try:
        user_name = call.message.chat.username
        name = call.message.chat.first_name
        await bot.send_message(ADMIN[0], f"@{user_name}: {name}, —Ö–æ—á–µ—Ç –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å :)")
        await bot.send_message(call.message.chat.id, """–•–æ—Ä–æ—à–æ! –ö–æ–≥–¥–∞ –Ω–∏–±—É–¥—å —Å —Ç–æ–±–æ–π —Å–≤—è–∂—É—Ç—Å—è üòâ (–∏–ª–∏ –Ω–µ—Ç)\n
        –¢—ã –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–º—É: @alexnerw\n–ê –ø–æ–∫–∞ —á—Ç–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é –≤ —Ç–µ–±—è –º–µ–Ω—é:""", parse_mode='html', reply_markup=None)
        await menu.toMenu(call.message)
    except Exception as ex:
        await bot.send_message(ADMIN[1], 'callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_fb_yes: ', ex)
        print("callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_fb_yes: ", ex)

@dp.callback_query_handler(text="fb_no")
async def inline_fb_no(call:types.CallbackQuery):
    try:

        await bot.send_message(call.message.chat.id, "–•–æ—Ä–æ—à–æ! –ù–µ—Ç —Ç–∞–∫ –Ω–µ—Ç :)", parse_mode='html', reply_markup=None)
        await menu.toMenu(call.message)
    except Exception as ex:
        await bot.send_message(ADMIN[1], 'callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_fb_no: ', ex)
        print("callback_query.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å inline_fb_no: ", ex)