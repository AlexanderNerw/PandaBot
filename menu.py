from aiogram.types import InlineQueryResultArticle, InputTextMessageContent, InlineQuery
from handlers.config import dp, bot, ADMIN
import hashlib, random, uuid
from handlers.querry_db import db
import handlers.keyboards as kb, handlers.tests as ts, handlers.setting as st
from handlers.dialogs import *




@dp.message_handler(commands=['menu'])
async def toMenu(message) -> None: #******************* –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ *********************

    try:
        if (db.getting(message.chat.id, 'language') == "ru"): #            –†—É—Å—Å–∫–∏–π —è–∑—ã–∫
            await message.answer("üî∏                <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>                üî∏\n\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–æ–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.",
            parse_mode='html', reply_markup = kb.board_menu)
                        
        elif (db.getting(message.chat.id, 'language') == "uk"): #            –£–∫—Ä–∞–∏–Ω—Å–∫–∏–π —è–∑—ã–∫
            await message.answer("üî∏                <b>–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é</b>                üî∏\n\n–¢—É—Ç —Ç–∏ –º–æ–∂–µ—à –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –º–æ—ó–º–∏ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏.",
            parse_mode='html', reply_markup = kb.board_menu)
    except Exception as ex:
        await bot.send_message(ADMIN[1], 'menu.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ –≤ toMenu: ', ex)
        print('menu.py [INFO] –ù–µ–ø–æ–ª–∞–¥–∫–∏ –≤ toMenu: ', ex)


#*******************************************************************************************************************************************



@dp.inline_handler()
async def inline_menu_online(inline_query: InlineQuery) -> None:

    text = inline_query.query or '*–Ω–∞–ø–∏—à–∏ –∑–∞–ø—Ä–æ—Å*'
    if text != None:
        procent = random.randint(0, 100)
        if procent < 10:
            how_shiza = InputTextMessageContent(message_text = f'<b>–Ø —à–∏–∑–∏–∫ –Ω–∞ {procent}%!</b> üôÇ', parse_mode='html')
        elif procent >= 10 and procent < 30:
            how_shiza = InputTextMessageContent(message_text = f'<b>–Ø —à–∏–∑–∏–∫ –Ω–∞ {procent}%!</b> üôÑ', parse_mode='html')
        elif procent >= 30 and procent < 70:
            how_shiza = InputTextMessageContent(message_text = f'<b>–Ø —à–∏–∑–∏–∫ –Ω–∞ {procent}%!</b> ü´†', parse_mode='html')
        elif procent >= 70:
            how_shiza = InputTextMessageContent(message_text = f'<b>–Ø —à–∏–∑–∏–∫ –Ω–∞ {procent}%!</b> ü§™', parse_mode='html')

    result_id: str = hashlib.md5(text.encode()).hexdigest()


    HowGay = InlineQueryResultArticle(
        id = str(uuid.uuid4()),
        input_message_content = InputTextMessageContent(message_text = f'<b>–Ø –≥–µ–π –Ω–∞ {random.randint(0, 100)}%!</b> üè≥Ô∏è‚Äçüåà', parse_mode='html'),
        title = 'üè≥Ô∏è‚Äçüåà –ù–∞—Å–∫–æ–ª—å–∫–æ % —Ç—ã –≥–µ–π',
        description = '–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —ç—Ç–æ –≤ —á–∞—Ç –∏ —É–∑–Ω–∞–π.',
        thumb_url = 'https://kartinkof.club/uploads/posts/2022-06/1655617211_2-kartinkof-club-p-kartinki-s-nadpisyu-ti-gei-2.png'
        )
    
    HowShiza = InlineQueryResultArticle(
        id = str(uuid.uuid4()),
        input_message_content = how_shiza,
        title = 'ü•¥ –ù–∞—Å–∫–æ–ª—å–∫–æ % —Ç—ã —à–∏–∑–æ—Ñ—Ä–µ–Ω–∏–∫',
        description = '–†–∏—Å–∫–Ω—ë—à—å –∏–ª–∏ –±–æ–∏—à—å—Å—è?',
        thumb_url = 'https://www.neurolikar.com.ua/wp-content/uploads/2017/09/bangalore-treatment-schizophrenia-symptoms.jpg'
        )

    MatNaMat = InlineQueryResultArticle(
        id = str(uuid.uuid4()),
        input_message_content = InputTextMessageContent(message_text = f'<b> {duff[random.randint(0, 42)]}!</b>', parse_mode='html'),
        title = '–ü–æ–∂–µ–ª–∞—Ç—å —Å—á–∞—Å—Ç—å—è —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É',
        description = '–û–±–º–∞—Ç–µ—Ä–∏ –µ–≥–æ/–µ—ë –ø–æ –ø–æ–ª–Ω–æ–π.',
        thumb_url = 'https://psychologyjournal.ru/upload/resize_cache/iblock/710/141_113_2/7105fae3f772f4a7fe11a4d32dd217c9.jpg'
        )

    HowSex = InlineQueryResultArticle(
        id = str(uuid.uuid4()),
        input_message_content = InputTextMessageContent(message_text = f'–°–µ–≥–æ–¥–Ω—è —è –ø–µ—Ä–µ—Å–ø–ª—é —Å <b>{name_sex[random.randint(0, 48)]} ü•∞</b>', parse_mode='html'),
        title = 'C –∫–µ–º —è —Å–µ–≥–æ–¥–Ω—è –ø–µ—Ä–µ—Å–ø–ª—é?',
        description = '–° –∫–µ–º —Ç—ã —Å–µ–≥–æ–¥–Ω—è –ø–µ—Ä–µ—Å–ø–∏—à—å.',
        thumb_url = 'https://png.pngtree.com/png-vector/20190420/ourlarge/pngtree-question-mark-vector-icon-png-image_963326.jpg'
        )

    HowDuo = InlineQueryResultArticle(
        id = str(uuid.uuid4()),
        input_message_content = InputTextMessageContent(message_text = f'–¢–≤–æ—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å <b>{text}</b>: {random.randint(0, 100)}% üíû', parse_mode='html'),
        title = '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –ø–æ –∏–º–µ–Ω–∏ üíû',
        description = '–í–≤–µ–¥–∏ c—é–¥–∞ –∏–º—è –∏ –ø–æ—Å–º–æ—Ç—Ä–∏–º.',
        thumb_url = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRw3-gg8s81qbG8genEgNX641bc2WNM9qdajA&usqp=CAU'
        )

    await bot.answer_inline_query( results = [HowGay, HowShiza, MatNaMat, HowSex, HowDuo], inline_query_id = inline_query.id, cache_time = 1 )